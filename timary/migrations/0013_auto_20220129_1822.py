# Generated by Django 3.2.10 on 2022-01-29 23:22
import time

import stripe
from django.db import migrations

from timary.services.stripe_service import StripeService


def assign_accounts_to_existing_profiles(apps, schema_editor):
    User = apps.get_model("timary", "User")
    for user in User.objects.all():
        stripe.api_key = StripeService.stripe_api_key
        stripe_connect_account = stripe.Account.create(
            country="US",
            type="custom",
            email=user.email,
            capabilities={
                "card_payments": {"requested": True},
                "transfers": {"requested": True},
            },
            business_type="individual",
            business_profile={"mcc": "1520", "url": "www.usetimary.com"},
            tos_acceptance={
                "date": int(time.time()),
                "ip": "127.0.0.1",
            },
            individual={
                "email": user.email,
                "first_name": user.first_name,
                "last_name": user.last_name,
            },
        )
        stripe_customer = stripe.Customer.create(
            email=user.email,
            name=f"{user.first_name} {user.last_name}",
            stripe_account=stripe_connect_account["id"],
        )
        user.stripe_connect_id = stripe_connect_account["id"]
        user.stripe_customer_id = stripe_customer["id"]
        user.save()


class Migration(migrations.Migration):

    dependencies = [
        ("timary", "0012_merge_20220123_1711"),
    ]

    operations = [
        migrations.RunPython(
            assign_accounts_to_existing_profiles, reverse_code=migrations.RunPython.noop
        )
    ]
