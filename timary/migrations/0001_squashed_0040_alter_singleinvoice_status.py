# Generated by Django 4.1.4 on 2023-01-15 04:37

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models

import timary.models

# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# timary.migrations.0008_user_referrer_id
# timary.migrations.0015_alter_sentinvoice_total_price
# timary.migrations.0024_user_stripe_subscription_recurring_price


def assign_referrer_id_to_existing_users(apps, schema_editor):
    User = apps.get_model("timary", "User")
    for user in User.objects.all():
        user.referrer_id = "123"
        user.save()


def update_total_prices_to_decimals(apps, schema_editor):
    SentInvoice = apps.get_model("timary", "SentInvoice")
    for sent_invoice in SentInvoice.objects.all():
        hours_tracked = (
            sent_invoice.invoice.hours_tracked.filter(sent_invoice_id=sent_invoice.id)
            .exclude(hours=0)
            .order_by("date_tracked")
        )
        total_cost_amount = sent_invoice.total_price
        if sent_invoice.invoice.invoice_type != 3:  # Weekly
            total_hours = hours_tracked.aggregate(total_hours=Sum("hours"))
            if total_hours["total_hours"]:
                total_cost_amount = (
                    total_hours["total_hours"] * sent_invoice.invoice.invoice_rate
                )
        sent_invoice.total_price = total_cost_amount
        sent_invoice.save()


def update_stripe_subscription_price(apps, schema_editor):
    User = apps.get_model("timary", "User")
    User.objects.all().update(stripe_subscription_recurring_price=29)


class Migration(migrations.Migration):

    replaces = [
        ("timary", "0001_initial"),
        ("timary", "0002_dailyhoursinput_sent_invoice_id"),
        ("timary", "0003_auto_20220429_2032"),
        ("timary", "0004_contract"),
        ("timary", "0005_user_profile_pic"),
        ("timary", "0006_user_invoice_branding"),
        ("timary", "0007_auto_20220812_1112"),
        ("timary", "0008_user_referrer_id"),
        ("timary", "0009_auto_20220818_2147"),
        ("timary", "0010_rename_hourly_rate_invoice_invoice_rate_and_more"),
        ("timary", "0011_remove_user_membership_tier"),
        ("timary", "0012_user_timer_is_active"),
        ("timary", "0013_user_stripe_connect_reason"),
        ("timary", "0014_alter_sentinvoice_paid_status"),
        ("timary", "0015_alter_sentinvoice_total_price"),
        ("timary", "0016_user_stripe_subscription_status"),
        ("timary", "0017_user_phone_number_repeat_sms"),
        ("timary", "0018_invoice_is_paused"),
        ("timary", "0019_dailyhoursinput_recurring_logic"),
        ("timary", "0020_alter_invoice_invoice_rate"),
        ("timary", "0021_alter_invoice_invoice_rate"),
        ("timary", "0022_rename_referrer_id_user_referral_id"),
        ("timary", "0023_user_referrer_id"),
        ("timary", "0024_user_stripe_subscription_recurring_price"),
        ("timary", "0025_rename_email_recipient_invoice_client_email_and_more"),
        ("timary", "0026_remove_sentinvoice_hours_end_date_and_more"),
        ("timary", "0027_alter_invoice_invoice_interval"),
        ("timary", "0028_rename_dailyhoursinput_hourslineitem"),
        ("timary", "0029_remove_hourslineitem_hours_and_more"),
        ("timary", "0030_hourslineitem_between_0_and_24_hours"),
        ("timary", "0031_alter_invoice_options_and_more"),
        ("timary", "0032_singleinvoice"),
        ("timary", "0033_hourslineitem_description"),
        ("timary", "0034_lineitem_alter_hourslineitem_options_and_more"),
        ("timary", "0035_alter_lineitem_date_tracked"),
        ("timary", "0036_alter_lineitem_unit_price"),
        ("timary", "0037_alter_singleinvoice_status"),
        ("timary", "0038_alter_sentinvoice_paid_status"),
        ("timary", "0039_alter_invoice_balance_due"),
        ("timary", "0040_alter_singleinvoice_status"),
    ]

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None, unique=True
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "membership_tier",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[
                            (5, "STARTER"),
                            (19, "PROFESSIONAL"),
                            (49, "BUSINESS"),
                            (1, "INVOICE_FEE"),
                        ],
                        default=5,
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "stripe_connect_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("stripe_payouts_enabled", models.BooleanField(default=False)),
                (
                    "phone_number_availability",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("Mon", "Mon"),
                            ("Tue", "Tue"),
                            ("Wed", "Wed"),
                            ("Thu", "Thu"),
                            ("Fri", "Fri"),
                            ("Sat", "Sat"),
                            ("Sun", "Sun"),
                        ],
                        max_length=27,
                        null=True,
                    ),
                ),
                (
                    "quickbooks_realm_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "freshbooks_account_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "xero_tenant_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "zoho_organization_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "freshbooks_refresh_token",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "quickbooks_refresh_token",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "xero_refresh_token",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "zoho_refresh_token",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "sage_account_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "sage_refresh_token",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "profile_pic",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                (
                    "invoice_branding",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                (
                    "referrer_id",
                    models.CharField(
                        default=timary.models.create_new_ref_number,
                        max_length=10,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email_id",
                    models.CharField(
                        default=timary.models.create_new_ref_number,
                        max_length=10,
                        unique=True,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "description",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "hourly_rate",
                    models.IntegerField(
                        default=50,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("email_recipient_name", models.CharField(max_length=200)),
                ("email_recipient", models.EmailField(max_length=254)),
                (
                    "invoice_interval",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("D", "DAILY"),
                            ("W", "WEEKLY"),
                            ("B", "BIWEEKLY"),
                            ("M", "MONTHLY"),
                            ("Q", "QUARTERLY"),
                            ("Y", "YEARLY"),
                        ],
                        default="M",
                        max_length=1,
                        null=True,
                    ),
                ),
                ("next_date", models.DateField(blank=True, null=True)),
                ("last_date", models.DateField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "quickbooks_customer_ref_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "freshbooks_client_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "is_archived",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("total_budget", models.IntegerField(blank=True, null=True)),
                (
                    "xero_contact_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "zoho_contact_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "zoho_contact_persons_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "sage_contact_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "email_recipient_stripe_customer_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "invoice_type",
                    models.IntegerField(
                        choices=[(1, "INTERVAL"), (2, "MILESTONE")], default=1
                    ),
                ),
                (
                    "milestone_step",
                    models.IntegerField(blank=True, default=1, null=True),
                ),
                ("milestone_total_steps", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DailyHoursInput",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        max_digits=4,
                        validators=[
                            timary.models.validate_less_than_24_hours,
                            timary.models.validate_greater_than_zero_hours,
                        ],
                    ),
                ),
                ("notes", models.CharField(blank=True, max_length=2000, null=True)),
                ("date_tracked", models.DateField()),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hours_tracked",
                        to="timary.invoice",
                    ),
                ),
                (
                    "sent_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SentInvoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("hours_start_date", models.DateField(blank=True, null=True)),
                ("hours_end_date", models.DateField(blank=True, null=True)),
                ("date_sent", models.DateField()),
                ("total_price", models.PositiveIntegerField()),
                (
                    "paid_status",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "PENDING"), (2, "PAID"), (3, "FAILED")], default=1
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="invoice_snapshots",
                        to="timary.invoice",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "quickbooks_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "freshbooks_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "xero_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "zoho_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "sage_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.CharField(blank=True, max_length=200, null=True)),
                ("name", models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RunPython(
            code=assign_referrer_id_to_existing_users,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name="user",
            name="referrer_id",
            field=models.CharField(
                default=timary.models.create_new_ref_number, max_length=10, unique=True
            ),
        ),
        migrations.RenameField(
            model_name="invoice",
            old_name="freshbooks_client_id",
            new_name="accounting_customer_id",
        ),
        migrations.RenameField(
            model_name="sentinvoice",
            old_name="freshbooks_invoice_id",
            new_name="accounting_invoice_id",
        ),
        migrations.RenameField(
            model_name="user",
            old_name="freshbooks_account_id",
            new_name="accounting_org",
        ),
        migrations.RenameField(
            model_name="user",
            old_name="freshbooks_refresh_token",
            new_name="accounting_org_id",
        ),
        migrations.RenameField(
            model_name="user",
            old_name="quickbooks_realm_id",
            new_name="accounting_refresh_token",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="quickbooks_customer_ref_id",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="sage_contact_id",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="xero_contact_id",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="zoho_contact_id",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="zoho_contact_persons_id",
        ),
        migrations.RemoveField(
            model_name="sentinvoice",
            name="quickbooks_invoice_id",
        ),
        migrations.RemoveField(
            model_name="sentinvoice",
            name="sage_invoice_id",
        ),
        migrations.RemoveField(
            model_name="sentinvoice",
            name="xero_invoice_id",
        ),
        migrations.RemoveField(
            model_name="sentinvoice",
            name="zoho_invoice_id",
        ),
        migrations.RemoveField(
            model_name="user",
            name="quickbooks_refresh_token",
        ),
        migrations.RemoveField(
            model_name="user",
            name="sage_account_id",
        ),
        migrations.RemoveField(
            model_name="user",
            name="sage_refresh_token",
        ),
        migrations.RemoveField(
            model_name="user",
            name="xero_refresh_token",
        ),
        migrations.RemoveField(
            model_name="user",
            name="xero_tenant_id",
        ),
        migrations.RemoveField(
            model_name="user",
            name="zoho_organization_id",
        ),
        migrations.RemoveField(
            model_name="user",
            name="zoho_refresh_token",
        ),
        migrations.RenameField(
            model_name="invoice",
            old_name="hourly_rate",
            new_name="invoice_rate",
        ),
        migrations.AlterField(
            model_name="invoice",
            name="invoice_type",
            field=models.IntegerField(
                choices=[(1, "INTERVAL"), (2, "MILESTONE"), (3, "WEEKLY")], default=1
            ),
        ),
        migrations.RemoveField(
            model_name="user",
            name="membership_tier",
        ),
        migrations.AddField(
            model_name="user",
            name="timer_is_active",
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="stripe_connect_reason",
            field=models.IntegerField(
                choices=[(1, "NONE"), (2, "PENDING"), (3, "MORE_INFO")], default=3
            ),
        ),
        migrations.AlterField(
            model_name="sentinvoice",
            name="paid_status",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "NOT_STARTED"),
                    (1, "PENDING"),
                    (2, "PAID"),
                    (3, "FAILED"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="sentinvoice",
            name="total_price",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=9),
        ),
        migrations.RunPython(
            code=update_total_prices_to_decimals,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AddField(
            model_name="user",
            name="stripe_subscription_status",
            field=models.IntegerField(
                choices=[(1, "TRIAL"), (2, "ACTIVE"), (3, "INACTIVE")], default=1
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="phone_number_repeat_sms",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="invoice",
            name="is_paused",
            field=models.BooleanField(blank=True, default=False, null=True),
        ),
        migrations.AddField(
            model_name="dailyhoursinput",
            name="recurring_logic",
            field=models.JSONField(blank=True, default=dict, null=True),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="invoice_rate",
            field=models.DecimalField(
                decimal_places=2,
                default=50,
                max_digits=6,
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="invoice_rate",
            field=models.DecimalField(
                decimal_places=2,
                default=100,
                max_digits=6,
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.RenameField(
            model_name="user",
            old_name="referrer_id",
            new_name="referral_id",
        ),
        migrations.AddField(
            model_name="user",
            name="referrer_id",
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="stripe_subscription_recurring_price",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.RunPython(
            code=update_stripe_subscription_price,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RenameField(
            model_name="invoice",
            old_name="email_recipient",
            new_name="client_email",
        ),
        migrations.RenameField(
            model_name="invoice",
            old_name="email_recipient_name",
            new_name="client_name",
        ),
        migrations.RenameField(
            model_name="invoice",
            old_name="email_recipient_stripe_customer_id",
            new_name="client_stripe_customer_id",
        ),
        migrations.RemoveField(
            model_name="sentinvoice",
            name="hours_end_date",
        ),
        migrations.RemoveField(
            model_name="sentinvoice",
            name="hours_start_date",
        ),
        migrations.AlterField(
            model_name="invoice",
            name="invoice_interval",
            field=models.CharField(
                blank=True,
                choices=[
                    ("W", "WEEKLY"),
                    ("B", "BIWEEKLY"),
                    ("M", "MONTHLY"),
                    ("Q", "QUARTERLY"),
                    ("Y", "YEARLY"),
                ],
                default="M",
                max_length=1,
                null=True,
            ),
        ),
        migrations.RenameModel(
            old_name="DailyHoursInput",
            new_name="HoursLineItem",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="hours",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="notes",
        ),
        migrations.AddField(
            model_name="hourslineitem",
            name="quantity",
            field=models.DecimalField(decimal_places=2, default=1, max_digits=9),
        ),
        migrations.AddField(
            model_name="hourslineitem",
            name="unit_price",
            field=models.DecimalField(decimal_places=2, default=1, max_digits=9),
        ),
        migrations.AlterField(
            model_name="hourslineitem",
            name="invoice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="line_items",
                to="timary.invoice",
            ),
        ),
        migrations.AddConstraint(
            model_name="hourslineitem",
            constraint=models.CheckConstraint(
                check=models.Q(("quantity__gte", 0), ("quantity__lt", 24)),
                name="between_0_and_24_hours",
            ),
        ),
        migrations.AlterModelOptions(
            name="invoice",
            options={"base_manager_name": "objects"},
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="invoice_interval",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="invoice_rate",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="invoice_type",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="last_date",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="milestone_step",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="milestone_total_steps",
        ),
        migrations.RemoveField(
            model_name="invoice",
            name="next_date",
        ),
        migrations.AddField(
            model_name="invoice",
            name="balance_due",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=100,
                max_digits=6,
                null=True,
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="rate",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                default=100,
                max_digits=6,
                null=True,
                validators=[django.core.validators.MinValueValidator(1)],
            ),
        ),
        migrations.CreateModel(
            name="RecurringInvoice",
            fields=[
                (
                    "invoice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timary.invoice",
                    ),
                ),
                ("next_date", models.DateField(blank=True, null=True)),
                ("last_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("timary.invoice",),
        ),
        migrations.CreateModel(
            name="IntervalInvoice",
            fields=[
                (
                    "recurringinvoice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timary.recurringinvoice",
                    ),
                ),
                (
                    "invoice_interval",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("W", "WEEKLY"),
                            ("B", "BIWEEKLY"),
                            ("M", "MONTHLY"),
                            ("Q", "QUARTERLY"),
                            ("Y", "YEARLY"),
                        ],
                        default="M",
                        max_length=1,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("timary.recurringinvoice",),
        ),
        migrations.CreateModel(
            name="MilestoneInvoice",
            fields=[
                (
                    "recurringinvoice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timary.recurringinvoice",
                    ),
                ),
                ("milestone_total_steps", models.IntegerField(blank=True, null=True)),
                (
                    "milestone_step",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("timary.recurringinvoice",),
        ),
        migrations.CreateModel(
            name="WeeklyInvoice",
            fields=[
                (
                    "recurringinvoice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timary.recurringinvoice",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("timary.recurringinvoice",),
        ),
        migrations.CreateModel(
            name="SingleInvoice",
            fields=[
                (
                    "invoice_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="timary.invoice",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[(0, "DRAFT"), (1, "SENT"), (2, "ARCHIVE")],
                        default=0,
                        null=True,
                    ),
                ),
                ("due_date", models.DateField(blank=True, null=True)),
                (
                    "send_reminder",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "late_penalty",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "late_penalty_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, default=0, max_digits=5, null=True
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, default=0, max_digits=5, null=True
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, default=0, max_digits=4, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("timary.invoice",),
        ),
        migrations.AddField(
            model_name="hourslineitem",
            name="description",
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.CreateModel(
            name="LineItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("date_tracked", models.DateField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "quantity",
                    models.DecimalField(decimal_places=2, default=1, max_digits=9),
                ),
                (
                    "unit_price",
                    models.DecimalField(decimal_places=2, default=1, max_digits=9),
                ),
                (
                    "sent_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
        migrations.AlterModelOptions(
            name="hourslineitem",
            options={"base_manager_name": "objects"},
        ),
        migrations.RemoveConstraint(
            model_name="hourslineitem",
            name="between_0_and_24_hours",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="date_tracked",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="description",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="id",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="invoice",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="quantity",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="sent_invoice_id",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="unit_price",
        ),
        migrations.RemoveField(
            model_name="hourslineitem",
            name="updated_at",
        ),
        migrations.AddField(
            model_name="lineitem",
            name="invoice",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="line_items",
                to="timary.invoice",
            ),
        ),
        migrations.AddField(
            model_name="lineitem",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="hourslineitem",
            name="lineitem_ptr",
            field=models.OneToOneField(
                auto_created=True,
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                parent_link=True,
                primary_key=True,
                serialize=False,
                to="timary.lineitem",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="lineitem",
            name="date_tracked",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="lineitem",
            name="unit_price",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=9),
        ),
        migrations.AlterField(
            model_name="singleinvoice",
            name="status",
            field=models.PositiveSmallIntegerField(
                blank=True, choices=[(0, "DRAFT"), (1, "SENT")], default=0, null=True
            ),
        ),
        migrations.AlterField(
            model_name="sentinvoice",
            name="paid_status",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "NOT STARTED"),
                    (1, "PENDING"),
                    (2, "PAID"),
                    (3, "FAILED"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="invoice",
            name="balance_due",
            field=models.DecimalField(
                blank=True, decimal_places=2, default=100, max_digits=6, null=True
            ),
        ),
        migrations.AlterField(
            model_name="singleinvoice",
            name="status",
            field=models.PositiveSmallIntegerField(
                blank=True, choices=[(0, "DRAFT"), (1, "FINAL")], default=0, null=True
            ),
        ),
    ]
