# Generated by Django 4.1.4 on 2023-01-07 21:12

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import timary.models


class Migration(migrations.Migration):

    dependencies = [
        ("timary", "0024_user_stripe_subscription_recurring_price"),
    ]

    operations = [
        migrations.CreateModel(
            name="SingleInvoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "invoice_interval",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("N", "NONE"),
                            ("W", "WEEKLY"),
                            ("B", "BIWEEKLY"),
                            ("M", "MONTHLY"),
                        ],
                        default="N",
                        max_length=1,
                        null=True,
                    ),
                ),
                ("next_date", models.DateField(blank=True)),
                ("end_interval_date", models.DateField(blank=True)),
                (
                    "email_id",
                    models.CharField(
                        default=timary.models.create_new_ref_number,
                        max_length=10,
                        unique=True,
                    ),
                ),
                (
                    "save_for_reuse",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("date_sent", models.DateField(blank=True)),
                ("due_date", models.DateField(blank=True)),
                (
                    "send_reminder",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("client_name", models.CharField(max_length=200)),
                ("client_email", models.EmailField(max_length=254)),
                (
                    "client_second_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "client_stripe_customer_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "total_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=9),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=4),
                ),
                (
                    "installments",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "NONE"),
                            (2, "TWO"),
                            (3, "THREE"),
                            (4, "FOUR"),
                            (5, "FIVE"),
                            (6, "SIX"),
                            (7, "SEVEN"),
                            (8, "EIGHT"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "paid_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "NOT_STARTED"),
                            (1, "PENDING"),
                            (2, "PAID"),
                            (3, "FAILED"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "late_penalty",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "late_penalty_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "accounting_customer_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "accounting_invoice_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="single_invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SingleInvoiceLineItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "quantity",
                    models.PositiveSmallIntegerField(blank=True, default=0, null=True),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=7),
                ),
                (
                    "save_for_reuse",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="line_items",
                        to="timary.singleinvoice",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SingleInvoiceInterval",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "paid_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "NOT_STARTED"),
                            (1, "PENDING"),
                            (2, "PAID"),
                            (3, "FAILED"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("date_sent", models.DateField()),
                ("due_date", models.DateField(blank=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interval_invoices",
                        to="timary.singleinvoice",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SingleInvoiceInstallment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "paid_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "NOT_STARTED"),
                            (1, "PENDING"),
                            (2, "PAID"),
                            (3, "FAILED"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("date_sent", models.DateField()),
                ("due_date", models.DateField(blank=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="installment_invoices",
                        to="timary.singleinvoice",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="singleinvoice",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("end_interval_date__isnull", False),
                        ("installments__exact", 0),
                        ("invoice_interval__gt", 0),
                    ),
                    models.Q(
                        ("end_interval_date__isnull", True),
                        ("installments__gt", 0),
                        ("invoice_interval__exact", 0),
                    ),
                    _connector="OR",
                ),
                name="timary_singleinvoice_either_interval_or_installments",
                violation_error_message="Cannot set both interval and installments for same invoice, please select either one.",
            ),
        ),
    ]
